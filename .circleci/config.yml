version: '2.1'
orbs:
  gh: circleci/github-cli@1.0.4

jobs:
  generate-docs:
    docker:
      - image: circleci/python:3.7.9-stretch

    steps:
      - checkout

      - run:
          run: setup_creds
          command: |
            echo $GCLOUD_SERVICE_KEY | base64 --decode --ignore-garbage > ${HOME}/gcloud-service-key.json
      - add_ssh_keys:
          fingerprints:
            - "03:02:1d:a2:52:0e:16:df:29:c9:de:35:d8:bc:61:74"

      - run:
          name: "Setup dbt"
          command: |
            sudo apt install libsasl2-dev
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip setuptools
            pip install -r integration_tests/requirements.txt
            mkdir -p ~/.dbt
            cp integration_tests/ci/sample.profiles.yml ~/.dbt/profiles.yml
      - run:
          name: "Generate Documentation - BigQuery"
          environment:
              GCLOUD_SERVICE_KEY_PATH: "/home/circleci/gcloud-service-key.json"

          command: |
            . venv/bin/activate
            echo `pwd`
            cd integration_tests
            dbt deps
            python ../.circleci/generate_source.py
            dbt run --target bigquery --full-refresh --vars '{"generating_docs": "yes"}'
            dbt docs generate --target bigquery --vars '{"generating_docs": "yes"}'
      - run:
          name: "Copy Documentation to /docs"
          command: |
            rm -rf docs
            mkdir docs
            cp integration_tests/target/catalog.json docs/catalog.json
            cp integration_tests/target/index.html docs/index.html
            cp integration_tests/target/manifest.json docs/manifest.json
            cp integration_tests/target/run_results.json docs/run_results.json
      - run:
          name: "Generate new commit"
          command: |
            git config user.email "autobot@fivetran.com"
            git config user.name "Generating Docs Bot"
            git checkout -b docs/auto-update-${CIRCLE_SHA1}-build${CIRCLE_BUILD_NUM}
            git add docs
            git commit -m "[skip ci] update docs"
            git push --set-upstream origin docs/auto-update-${CIRCLE_SHA1}-build${CIRCLE_BUILD_NUM}
      - gh/setup:
          token: "GITHUB_TOKEN_FOR_DOCS"
      - run:
          name: Create Pull Request
          command: |
            gh pr create --title "Docs update from $CIRCLE_BRANCH" --head docs/auto-update-${CIRCLE_SHA1}-build${CIRCLE_BUILD_NUM} --body "This is an autogenerated PR to update the docs"
  test:
    docker:
      - image: circleci/python:3.7.9-stretch

    steps:
      - checkout

      - run:
          run: setup_creds
          command: |
            echo $GCLOUD_SERVICE_KEY | base64 --decode --ignore-garbage > ${HOME}/gcloud-service-key.json
      - run:
          name: "Setup dbt"
          command: |
            sudo apt install libsasl2-dev
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip setuptools
            pip install -r integration_tests/requirements.txt
            mkdir -p ~/.dbt
            cp integration_tests/ci/sample.profiles.yml ~/.dbt/profiles.yml
      - run:
          name: "Run Tests - Spark"
          command: |
            . venv/bin/activate
            echo `pwd`
            cd integration_tests
            dbt deps
            dbt seed --target spark --full-refresh
            dbt run --target spark --full-refresh
            dbt test --target spark
            dbt run --vars '{apple_search_ads__using_search_terms: false}' --target spark --full-refresh
            dbt test --target spark

      - run:
          name: "Run Tests - Redshift"
          command: |
            . venv/bin/activate
            echo `pwd`
            cd integration_tests
            dbt deps
            dbt seed --target redshift --full-refresh
            dbt run --target redshift --full-refresh
            dbt test --target redshift
            dbt run --vars '{apple_search_ads__using_search_terms: false}' --target redshift --full-refresh
            dbt test --target redshift

      - run:
          name: "Run Tests - Postgres"
          command: |
            . venv/bin/activate
            echo `pwd`
            cd integration_tests
            dbt deps
            dbt seed --target postgres --full-refresh
            dbt run --target postgres --full-refresh
            dbt test --target postgres
            dbt run --vars '{apple_search_ads__using_search_terms: false}' --target postgres --full-refresh
            dbt test --target postgres

      - run:
          name: "Run Tests - Snowflake"
          command: |
            . venv/bin/activate
            echo `pwd`
            cd integration_tests
            dbt deps
            dbt seed --target snowflake --full-refresh
            dbt run --target snowflake --full-refresh
            dbt test --target snowflake
            dbt run --vars '{apple_search_ads__using_search_terms: false}' --target snowflake --full-refresh
            dbt test --target snowflake

      - run:
          name: "Run Tests - BigQuery"
          environment:
              GCLOUD_SERVICE_KEY_PATH: "/home/circleci/gcloud-service-key.json"

          command: |
            . venv/bin/activate
            echo `pwd`
            cd integration_tests
            dbt deps
            dbt seed --target bigquery --full-refresh
            dbt run --target bigquery --full-refresh
            dbt test --target bigquery
            dbt run --vars '{apple_search_ads__using_search_terms: false}' --target bigquery --full-refresh
            dbt test --target bigquery

workflows:
  version: 2
  integration-tests:
    jobs:
      - test
      - generate-docs:
          requires:
            - test
          filters:
            branches:
              only:
                - master
                - main
          